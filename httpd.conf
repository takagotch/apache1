//host dir
RewriteCond "%{HTTP_HOST}" "^([^.]+)\.exapmle\.com" [NC]
RewriteRule "(.*)" "httpL//example.com/%1$1" [R]"

RewriteCond "%{HTTP_HOST}" "^()\.example\.com$"[NC]
RewirteRule "(.*)" "/%1$1" [PT]

//URL query
RewriteRule "/(.*)" "/cgi-bin/remap?page=$1" [QSA,PT]

//AliasMatch ScriptAliasMatch RedirectMatch
AliasMatch "/users/(.*)/" "/home/webonly/$1"
RedirectMatch permanent "/projects/(^/)+(/.*)" "http://$1.projectdomain.com$2"

//host redirect
RewriteCond "{%HTTP_HOST}"   "!^www.example.com" [NC,OR]
RewriteCond "%{SERVER_NAME}" "!www.example.com" [NC]
RewriteRule "(.*)"           "http://www.example.com$1" [R]

//doc argument
RewriteRule "^/dir/([^./]*)\.html" "/dir/script.cgi?doc=$1" [PT]

//URL query PATH
RewriteRule "^(/path/to)/(\d+)" "$1?id=$2" [PT]

RewriteCond "%{QUERY_STRING}" "\bid=(\d+)\b"
RewriteRule "(/path/to)" "$1%2" [PT,QSA]

//dir host
RewriteRule "^/(patha|pathb|pathc)(/.*)" "http://$1.example.com$2" [R]
RewriteRule "^/([^./]*)(/.*)" "http://$1.example.com$2" [R]
RewriteRule "^/~([^./]*)(/.*)" "http://$1.example.com$2" [R]

//query
RewriteCond "%{QUERY_STRING}" "^user=([^=]*)"
RewriteRule "/people" "http://%1.users.example.com/" [R]

//SSL redirect
RewriteCond "%{SERVER_PORT}" "^80$"
RewriteRule "^(.*)$" "https://%{SERVER_NAME}$1" [R,L]

RewriteRule "^/normal/secure(/.*)" "https://%{HTTP_HOST}$1" [R,L]

RewriteCond "%{HTTPS}" "!=on"
RewriteRule "^(/secure/.*)" "https://%{HTTP_HOST}$1" [R,L]

Redirect "/" "https://secure.example.com/"

//Referer 
RewriteEngine On
RewriteCond "%{HTTP_REFERER}" "^$"
RewriteRule "(.*)" "/cgi-bin/need-referer" [PT,E=ORIG:$1]

//deny access
Rewrite Engine On
RewriteCond "%{HTTP_REFERER}" !=""
RewriteCond "%{HTTP_REFERER}" "!^http://mysite.com/.*$" [NC]
RewriteRule "\.(jpg|gif|png)$ = [F]

//CGI arg
RewriteEngine on
RewriteRule "^/book([^/]*)/([^/]*)" "/cgi-bin/book.cgi?subject=$1&author=$2" [PT]

//URL req
RewriteRule "(.*)string(.*)" "$1string$2" [N,PT]

//.php ln
RewriteRule "^(.+\.php)s$" "$1" [T=application/x-httpd-php-source]
RewriteRule "^(.+\.php)s$" "$1" [H=application/x-httpd-php-source]

RewriteRule "^(.*\.php)s$" "/cgi-bin/show.php?file=$1" [PT,L]

//URL redirect 
RedirectMatch "^/[fF]ish(ing)?(/.*)?" "http://fish.example.com/$2"

//redirect
Redirect "/example" "http://www2.example.com/new/location"

Redirect /foo.html http://example.com/under-construction/foo.html
Redirect /foo.html http://example.com/under-construction/foo.html
Redirect /foo.html http://example.com/under-construction/foo.html

Redirect permanent /foo.html http://example.com/relocated/foo.html
RedirectPermanent /foo.html http://example.com/relocated/foo.html

Redirect seether /foo.html http://example.com/relocaetd/bar.html
Redirect gone /foo.html

//URL cgi
ScriptAliasMatch "^/[sS]cripts?|cgi(-bin)?/" "/www/cgi-bin/"

//usr cgi dir
<Directory "/home/*/public_html/cgi-bin/">
  Options ExecCGI
  SetHandler cgi-script
</Directory>
ScriptAliasMatch "/~(^[^/]+)/cgi-bin/(.*)" "/home/$1/public_html/cgi-bin/$2"

//URL Alias
AliasMatch "^/pupp(yies)" "/www/docs/small_dogs"
AliasMatch "^/P-([[:alnum:]])([^/]*)" "/usr/local/projects/$1/$1$2"

//URL
UserDir public_html
UserDir "/www/users/*/htdocs"

RewriteEngine On
RewriteCond "/home/$1/public_html" -d [NC]
RewriteRule "^/([^/]+)/(.*)" "/home/$1/public_html/$2"

/*
mod_rewrite
<Perl>
my %forbid = map { $_ => 1 } qw(root postgres bob);
opendir H, '/home/';
my @dir = readdir(H);
closedir H;
foreach my $u (@dir){
  next if $u =~ m/^\./;
  next if $forbid{$u};
  if(-e "/home/$u/public_html"){
    push @Alias, "/$u/", "/home/$u/public_html/";
  }
}
</Perl>
*/

<Directory "/home/*/public_html">
  AllowOverride FileInfo AuthConfig Limit
  Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec
  <Limit GET POST OPTIONS PROPFIND>
    Order allow,deny
    Allow from all
  </Limit>
  <LimitExcept GET POST OPTIONS PROFIND>
    Order deny,allow
    Deny from all
  </LimitExcept>
</Directory>

//URL
Alias "/newurl" "/www/htdocs/oldurl"

//URL dir
Alias "/desired-URL-prefix" "/path/to/other/directory"

<Directory "/path/to/other/directory">
  Order allow,deny
  Allow from all
</Directory>

Alias "/puppies/" "/www/docs/puppies/"
Alias "/icons/" "/usr/local/apache/icons"

---

//usrdir log
CustomLog "|/usr/local/apache/bin/userdir_log" comined

//syslog
ErrorLog syslog:user

CustomLog |/usr/local/apache/bin/apache_syslog combined

AccessLog "|/usr/bin/logger" combined

//mysql log
<IfModule mod_log_sql.c>
  LogSQLLoginInfo mysql://webserver:wwwpw@dbmachine.example.com/apache_log
  LogSQLCreateTables on
</IfModule>

LogSQLTransferLogTable access_log

//res head log
%{Last-Modified}o

//res head log
%{Host}i

CustomLog logs/accept_log "\"%{Accept}i\""

//browser log
%{User-Agent}i

//refer log
%{Referer}i

//sv ip log
CustomLog logs/served-by.log "%A"

//Vhost err log
ErrorLog "| tee logfile1 | tee logfile2 > logfile3"

//proxy req log
<Directory proxy:*>
  SetEnv is_proxyied 1
</Directory>
CustomLog logs/proxy_log combined env=is_proxyied

<Proxy *>
  SetEnv is_proxied 1
</Proxy>
CustomLog logs/proxy_log combined env=is_proxied

<Directory proxy:*>
  RewriteEngine On
  RewriteRule "\.(gif|png|jpg)$" "-" [ENV=proxied_image:1]
  RewriteCond "%{ENV:proxied_image}" "!1"
  RewriteRule "^" "-" [ENV=proxied_other:1]
</Directory>
CustomLog logs/proxy_image_log combined env=proxied_image
CustomLog logs/proxy_other_log combined env=proxied_other


//Vhost log
CustomLog "| /path/to/split-logfile /path/to/logs" combined

//ipaddr host log
HostnameLookups On

HostnameLookups Off
CustomLog "| /path/to/logresolve -c >> /path/to/logs/access_log.resolved" combined
CustomLog /path/to/logs/access_log.raw combined

% /path/to/logresolve -c < access_log.raw > access_log.resolved

//log lotation
CustomLog "|/usr/bin/cronolog /path/to/logs/access%Y%m.log" combined

//term log lotation
CustomLog "| /path/to/rotatelogs /path/to/logs/access_log.%Y-%m-%d 86400" combined

//locale img req log
<FilesMatch \.(jpg|gif|png)$>
  SetEnvIfNoCase Referer "^http://www.example.com/" local_referer=1
</FilesMatch>
CustomLog logs/access_log combined env=!local_referer

//Cookie
CustomLog logs/cookies_in.log "%{UNIQUE_ID}e %{Cookie}i"
CustomLog logs/cookies2_in.log "%{UNIQUE_ID}e %{Cookie2}i"

CustomLog logs/cookies_out.log "%{UNIQUE_ID}e %{Set-Cookie}o"
CustomLog logs/cookies2_out.log "%{UNIQUE_ID}e %{Set-Cookie2}o"

//MACaddr

//proxy client ipaddr

//post log

//LogLevel
LogLevel Dubug

//common
CustomLog logs/access_log combined


----

//mod_dav
<IfModule mod dav.c>
  DAVLockDB var/DAVlock
</IfModule>

<Directory "/usr/local/apache/htdocs/dav-test">
  DAV On
</Directory>

//mod_dav win
LoadModule dav_module modules/mod_dav.dll

<IfModule mod_dav.c>
  DVALockDB "C://Apache-1.3/var/dav-lock"
</IfModule>

<IfModule mod_dav.c>
  DAVLockDB "C://Apache-1.3/var/dav-lock"
  <Directory "C://Apache-1.3/htdocs/dav-test">
    DAV On
  </Directory>
</IfModule>


//mod_perl
<IfModule mod_perl.c>
  PerlRequire conf/setup.pl
  <Location /mod_perl/howdy>
    SetHandler perl-script
    PerlHandler Apache:HelloWorld
  </Location>
<IfModule>

//mod_php
<IfModule mod_php5.c>
  AddHandler application/x-httpd-php .php
</IfModule>

//mod_php win
<IfModule mod_php4.c>
  AddType application/x-httpd-php .php
</IfModule>

LoadModule php4_module module/php4apache.dll

extensions_dir = C:\PHP4\extensions

//modules.apache.org

//mod_security
LoadModule security_module modules/mod_security2.so
Include conf/mod_security/*.conf

//pass expired
use Apache::Htpasswd::Perishable;
my $pass = Apache::Htpasswd::Perishable->new("/usr/local/apache/password/user.pass")
  or die "Could not open password file.";
$pass->expire('waldo', 5);

PerlAuthoHandler Apache::AuthExpire
PerlSetVal DefaultLimit 7200

//upload size
<Directory "/usr/local/apache2/uploads">
  LimitRequestBody 10000
</Directory>

SetEnvIf Content-Length "" upload_too_large=1
<Location /upload>
  Order Deny,Allow
  Deny from env=upload_too_large
  ErrorDocument 403 /cgi-bin/remap-403-to-413
</Location>


//img 
<FileMatch "\.(jpg|jpeg|gif|png)$">
  SetEnvIfNoCase Referer "" local_referer=1
  Order Allow,Deny
  Allow from env=local_referrer
</FileMatch>

SetEnvIfNoCase Referer "^http://([^/]*\.)?myserver.com/" local_referer=1
RewriteCond "%{ENV:local_referrer}" "!=1"
RewriteRule ".*" "/Stolen-100*100.png" [L]

//Satisfy dir
<Directory /www/htdocs/sensitive>
  Satisfy All

  AuthType Basic
  AuthName Sensitive
  AuthUserFile /www/passwords/users
  AuthGroupFile /www/passwords/groups
  Require group salemen

  Order deny,allow
  Deny from all
  Allow from 192.168.1
</Directory>

<SatisfyAll>
  Require group salemen
  Require ip 192.168.1
</SatisfyAll>

// .htpasswd









